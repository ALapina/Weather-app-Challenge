{"version":3,"sources":["utils.js","images/Shower.png","components/WeatherInfo/WeatherInfoElements.js","components/Location/LocationElements.js","components/Location/index.jsx","components/WeatherInfo/index.jsx","components/WeatherDetails/index.jsx","components/App.js","components/globals/globalStyles.js","index.js","components/globals/theme.js"],"names":["currentDay","today","Date","day","toLocaleString","weekday","month","WeatherInfoContainer","styled","section","theme","colors","greyishBlue","mediaQueries","bellow1024","bellow568","WeatherImgWrap","div","WeatherInfoWrapper","Temperature","h2","TempDegrees","span","lightGrey","WeatherCondition","h3","CurrentDate","grey","DotIconWrapper","CurrentLocationWrapper","LocationIconWrapper","LocationTextWrapper","Location","useState","userLocation","setUserLocation","useEffect","findUserLocationByIP","a","axios","get","catch","error","console","response","data","city","WeatherInfo","src","WeatherIcon","alt","WeatherDetails","Main","main","App","GlobalStyle","createGlobalStyle","normalize","props","darkBlue","whiteLavender","ReactDOM","render","StrictMode","darkGrey","neonBlue","document","getElementById"],"mappings":"4NAAaA,EAAa,WACxB,IAAMC,EAAQ,IAAIC,KACZC,EAAMF,EAAMG,eAAe,UAAW,CAAED,IAAK,YAC7CE,EAAUJ,EAAMG,eAAe,UAAW,CAAEC,QAAS,UACrDC,EAAQL,EAAMG,eAAe,UAAW,CAAEE,MAAO,UACjDN,EAAU,UAAMK,EAAN,aAAkBF,EAAlB,YAAyBG,GACzC,OAAON,GCNM,MAA0B,mC,OCE5BO,EAAuBC,UAAOC,QAAV,oOACX,qBAAGC,MAAkBC,OAAOC,eAMvC,qBAAGF,MAAkBG,aAAaC,cAGlC,qBAAGJ,MAAkBG,aAAaE,aAKhCC,EAAiBR,UAAOS,IAAV,sGAOdC,EAAqBV,UAAOS,IAAV,uFAKlBE,EAAcX,UAAOY,GAAV,4FAKXC,EAAcb,UAAOc,KAAV,6GACb,qBAAGZ,MAAkBC,OAAOY,aAK1BC,EAAmBhB,UAAOiB,GAAV,4KAIlB,qBAAGf,MAAkBC,OAAOY,aAG5B,qBAAGb,MAAkBG,aAAaE,aAKhCW,EAAclB,UAAOS,IAAV,2JAGb,qBAAGP,MAAkBC,OAAOgB,QAM1BC,EAAiBpB,UAAOc,KAAV,+F,GAMHd,UAAOS,IAAV,wJAIV,qBAAGP,MAAkBC,OAAOgB,QAKXnB,UAAOS,IAAV,sD,wDC1EZY,EAAyBrB,UAAOS,IAAV,gOACxB,qBAAGP,MAAkBC,OAAOgB,QAW1BG,EAAsBtB,UAAOS,IAAV,sDAInBc,EAAsBvB,UAAOS,IAAV,6E,OCiBjBe,EAzBE,WAAO,IAAD,EACmBC,mBAAS,MAD5B,mBACdC,EADc,KACAC,EADA,KAGrBC,qBAAU,WACRC,MACC,IAGH,IAAMA,EAAoB,uCAAG,4BAAAC,EAAA,sEACJC,IACpBC,IAAI,uCACJC,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,MAHP,OACrBE,EADqB,OAI3BT,EAAgBS,EAASC,KAAKC,MAJH,2CAAH,qDAO1B,OACE,eAACjB,EAAD,WACE,cAACC,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAD,UAAsBG,QCmBba,EAzBK,WAClB,OACE,eAACxC,EAAD,WACE,cAACS,EAAD,UACE,qBAAKgC,IAAKC,EAAaC,IAAI,cAE7B,eAAChC,EAAD,WACE,eAACC,EAAD,gBAEE,cAACE,EAAD,uBAEF,cAACG,EAAD,qBACA,eAACE,EAAD,mBAEE,cAACE,EAAD,UACE,cAAC,IAAD,MAED5B,OAEH,cAAC,EAAD,WCjCOmD,EARQ,WACrB,OACE,kCACE,wDCCAC,EAAO5C,UAAO6C,KAAV,sIAIC,qBAAG3C,MAAkBG,aAAaE,aAc9BuC,I,EAAAA,EATf,WACE,OACE,eAACF,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCSSG,EAzBKC,4BAAH,iYACfC,aAeoB,SAACC,GAAD,OAAWA,EAAMhD,MAAMC,OAAOgD,YACzC,qBAAGjD,MAAkBC,OAAOiD,iBCZvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,gBAAD,CAAerD,MCVE,CACnBC,OAAQ,CACNC,YAAa,UACb+C,SAAU,UACVC,cAAe,UACfrC,UAAW,UACXI,KAAM,UACNqC,SAAU,UACVC,SAAU,WAEZpD,aAAc,CACZC,WAAY,sCACZC,UAAW,uCDFX,UACE,cAAC,EAAD,IACA,cAAC,EAAD,SAGJmD,SAASC,eAAe,W","file":"static/js/main.1d24fa2e.chunk.js","sourcesContent":["export const currentDay = () => {\n  const today = new Date();\n  const day = today.toLocaleString(\"default\", { day: \"numeric\" });\n  const weekday = today.toLocaleString(\"default\", { weekday: \"short\" });\n  const month = today.toLocaleString(\"default\", { month: \"short\" });\n  const currentDay = `${weekday}, ${day} ${month}`;\n  return currentDay;\n};\n","export default __webpack_public_path__ + \"static/media/Shower.ea1e199a.png\";","import styled from \"styled-components\";\n\nexport const WeatherInfoContainer = styled.section`\n  background-color: ${({ theme }) => theme.colors.greyishBlue};\n  width: 30%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media ${({ theme }) => theme.mediaQueries.bellow1024} {\n    width: 40%;\n  }\n  @media ${({ theme }) => theme.mediaQueries.bellow568} {\n    width: 100%;\n  }\n`;\n\nexport const WeatherImgWrap = styled.div`\n  height: 70%;\n  width: 100%;\n  display: grid;\n  place-items: center;\n`;\n\nexport const WeatherInfoWrapper = styled.div`\n  height: 100%;\n  display: grid;\n  place-items: center;\n`;\nexport const Temperature = styled.h2`\n  font-weight: 500;\n  font-size: 9rem;\n  line-height: 169px;\n`;\nexport const TempDegrees = styled.span`\n  color: ${({ theme }) => theme.colors.lightGrey};\n  font-weight: 500;\n  font-size: 3rem;\n  line-height: 56.35px;\n`;\nexport const WeatherCondition = styled.h3`\n  font-weight: 600;\n  font-size: 2.25rem;\n  line-height: 42px;\n  color: ${({ theme }) => theme.colors.lightGrey};\n  margin: 1rem 0;\n\n  @media ${({ theme }) => theme.mediaQueries.bellow568} {\n    margin: 2rem 0;\n  }\n`;\n\nexport const CurrentDate = styled.div`\n  font-size: 1.125rem;\n  line-height: 21px;\n  color: ${({ theme }) => theme.colors.grey};\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n`;\n\nexport const DotIconWrapper = styled.span`\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  display: flex;\n`;\n\nexport const Location = styled.div`\n  font-weight: 600;\n  font-size: 1.125rem;\n  line-height: 21px;\n  color: ${({ theme }) => theme.colors.grey};\n  margin-bottom: 2rem;\n  display: flex;\n`;\n\nexport const LocationIcon = styled.div`\n  padding-right: 0.5rem;\n`;\n","import styled from \"styled-components\";\n\nexport const CurrentLocationWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.grey};\n  min-width: 100%;\n  font-weight: 600;\n  font-size: 1.125rem;\n  line-height: 21px;\n  margin-bottom: 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const LocationIconWrapper = styled.div`\n  padding-right: 0.5rem;\n`;\n\nexport const LocationTextWrapper = styled.div`\n  max-width: 80%;\n  overflow-wrap: break-word;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { MdLocationOn } from \"react-icons/md\";\nimport axios from \"axios\";\n\nimport {\n  CurrentLocationWrapper,\n  LocationIconWrapper,\n  LocationTextWrapper,\n} from \"./LocationElements\";\n\nconst Location = () => {\n  const [userLocation, setUserLocation] = useState(null);\n\n  useEffect(() => {\n    findUserLocationByIP();\n  }, []);\n\n  // find user location by IP\n  const findUserLocationByIP = async () => {\n    const response = await axios\n      .get(\"https://extreme-ip-lookup.com/json/\")\n      .catch((error) => console.error(error));\n    setUserLocation(response.data.city);\n  };\n\n  return (\n    <CurrentLocationWrapper>\n      <LocationIconWrapper>\n        <MdLocationOn />\n      </LocationIconWrapper>\n      <LocationTextWrapper>{userLocation}</LocationTextWrapper>\n    </CurrentLocationWrapper>\n  );\n};\n\nexport default Location;\n","import React from \"react\";\n\n// import { MdLocationOn } from \"react-icons/md\";\n\nimport { BsDot } from \"react-icons/bs\";\n\n// import UserLocation from \"../UserLocation\";\n\nimport { currentDay } from \"../../utils\";\n\nimport WeatherIcon from \"../../images/Shower.png\";\nimport {\n  WeatherInfoContainer,\n  WeatherImgWrap,\n  WeatherInfoWrapper,\n  Temperature,\n  TempDegrees,\n  WeatherCondition,\n  CurrentDate,\n  DotIconWrapper,\n} from \"./WeatherInfoElements\";\n\nimport Location from \"../Location\";\n\nconst WeatherInfo = () => {\n  return (\n    <WeatherInfoContainer>\n      <WeatherImgWrap>\n        <img src={WeatherIcon} alt=\"weather\" />\n      </WeatherImgWrap>\n      <WeatherInfoWrapper>\n        <Temperature>\n          15\n          <TempDegrees>&deg;C</TempDegrees>\n        </Temperature>\n        <WeatherCondition>Shower</WeatherCondition>\n        <CurrentDate>\n          Today\n          <DotIconWrapper>\n            <BsDot />\n          </DotIconWrapper>\n          {currentDay()}\n        </CurrentDate>\n        <Location />\n      </WeatherInfoWrapper>\n    </WeatherInfoContainer>\n  );\n};\n\nexport default WeatherInfo;\n","import React from \"react\";\n\nconst WeatherDetails = () => {\n  return (\n    <section>\n      <p>Weather Details menu</p>\n    </section>\n  );\n};\n\nexport default WeatherDetails;\n","import React from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport WeatherDetails from \"./WeatherDetails\";\n\nimport styled from \"styled-components\";\n\nconst Main = styled.main`\n  min-height: 100vh;\n  width: 100%;\n  display: flex;\n  @media ${({ theme }) => theme.mediaQueries.bellow568} {\n    flex-direction: column;\n  }\n`;\n\nfunction App() {\n  return (\n    <Main>\n      <WeatherInfo />\n      <WeatherDetails />\n    </Main>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\n\nconst GlobalStyle = createGlobalStyle`\n${normalize}\nhtml{\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\n*,\n*::before,\n*::after {\n  -webkit-box-sizing: inherit;\n  box-sizing: inherit;\n  padding: 0;\n  margin: 0;\n          \n}\nbody{\n  background-color: ${(props) => props.theme.colors.darkBlue};\n  color: ${({ theme }) => theme.colors.whiteLavender};\n  font-weight: 500;\n  font-size: 1rem;\n  line-height: 19px;\n  font-family: 'Raleway', sans-serif;\n}\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyle from \"./components/globals/globalStyles\";\n\nimport { theme } from \"./components/globals/theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","export const theme = {\n  colors: {\n    greyishBlue: \"#1E213A\",\n    darkBlue: \"#100E1D\",\n    whiteLavender: \"#E7E7EB\",\n    lightGrey: \"#A09FB1\",\n    grey: \"#88869D\",\n    darkGrey: \"#6E707A\",\n    neonBlue: \"#3C47E9\",\n  },\n  mediaQueries: {\n    bellow1024: \"only screen and (max-width: 1024px)\",\n    bellow568: \"only screen and (max-width: 568px)\",\n  },\n};\n"],"sourceRoot":""}